using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using System.Linq;
using System.Xml.Linq;
using System.Xml.Serialization;
using AuthGateway.Shared;
namespace AuthGateway.OATH.XmlProcessor
{

	// 
	// This source code was auto-generated by xsd, Version=2.0.50727.3038.
	// 


	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlTypeAttribute(AnonymousType = true)]
	[XmlRootAttribute(Namespace = "", IsNullable = true)]
	public partial class value
	{


		private string idField;

		private string valueField;
		/// <remarks/>
		[XmlAttributeAttribute()]
		public string id {
			get { return this.idField; }
			set { this.idField = value; }
		}

		/// <remarks/>
		[XmlTextAttribute()]
		public string Value {
			get { return this.valueField; }
			set { this.valueField = value; }
		}
	}


	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
	[System.SerializableAttribute()]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlTypeAttribute(AnonymousType = true)]
	[XmlRootAttribute(Namespace = "", IsNullable = false)]
	public partial class tokenresponse : EncryptCheckResponse
	{

		private string tokenField;

		private value[] aftervaluesField;

		private value[] beforevaluesField;
		/// <remarks/>
		[XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string token {
			get { return this.tokenField; }
			set { this.tokenField = value; }
		}

		/// <remarks/>
		[XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("value", typeof(value))]
		public value[] aftervalues {
			get { return this.aftervaluesField; }
			set { this.aftervaluesField = value; }
		}

		/// <remarks/>
		[XmlArrayAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("value", typeof(value))]
		public value[] beforevalues {
			get { return this.beforevaluesField; }
			set { this.beforevaluesField = value; }
		}
	}
}
